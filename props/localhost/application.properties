# Disable JMX
spring.jmx.enabled=false

#Spring console output
spring.main.banner-mode=off

# Logging
# https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-logging.html
org.springframework.boot.logging.LoggingSystem=Logback
# see logback-spring.xml for configuration

# Java keystore containing this application's private RSA keypair, and any public certs of integration partners
# you can either use the specified filename on the classpath or fetch from remote source on launch
java.keystore.fetch.from.remote=false
java.keystore.remote.source=https://localhost/extract-publisher-keystore.pkcs12
java.keystore.local.filename=/auth/extract-publisher-keystore.pkcs12
java.keystore.password=ENC(..encrypted text removed..)
java.keystore.private.key.password=ENC(..encrypted text removed..)
java.keystore.private.key.alias=extract-publisher-application

# Support for encrypting the property file values in this file.
jasypt.encryptor.provider-name=SunJCE
jasypt.encryptor.algorithm=PBEWithHmacSHA512AndAES_256
jasypt.encryptor.saltGeneratorClassname=org.jasypt.salt.RandomSaltGenerator
jasypt.encryptor.ivGeneratorClassname=org.jasypt.iv.RandomIvGenerator
jasypt.encryptor.keyObtentionIterations=3000
# The password used to encrypt/decrypt should be managed externally to this application.  This configuration expects
# the password to be present in the execution environment variable named EXTRACT_PUBLISHER_SERVICE_PASSWORD.
jasypt.encryptor.password=${EXTRACT_PUBLISHER_SERVICE_PASSWORD}

# Mail gateway that will be used for outbound mail
spring.mail.host=smtp.example.org
spring.mail.port=25
spring.mail.username=ENC(..encrypted text removed..)
spring.mail.password=ENC(..encrypted text removed..)
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.from=Extract-Publisher-noreply@example.org

# Database authentication
org.example.db.driver=ORACLE
org.example.db.schema=SCHEMA_NAME
org.example.db.url=jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(protocol=tcp)(host=HOSTNAME.example.org)(port=1521))(CONNECT_DATA=(SERVICE_NAME=DBNAME.WORLD)))
org.example.db.user=USERNAME
org.example.db.password=ENC(..encrypted text removed..)

# RabbitMQ authentication for AMQP messaging service
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#spring.rabbitmq.exchange.command=ExtractPublisherExchange
#spring.rabbitmq.queue.command=ExtractPublisherQueue

# AMQP Producer
# Create a durable RabbitMQ fanout exchange if it does not already exist
# This will where messages from this application will be published to.
spring.cloud.stream.bindings.output.destination=ExtractPublisherOutputExchange
spring.cloud.stream.rabbit.bindings.output.producer.declareExchange=true
spring.cloud.stream.rabbit.bindings.output.producer.exchangeDurable=true
spring.cloud.stream.rabbit.bindings.output.producer.exchangeType=fanout

# AMQP Consumer
# Create a durable RabbitMQ fanout exchange if it does not already exist
# and bind the extractPublisher queue to it.  This is where this application will receive messages from.
spring.cloud.stream.bindings.input.destination=ApiEventsExchange
spring.cloud.stream.bindings.input.group=extractPublisher
spring.cloud.stream.rabbit.bindings.input.consumer.declareExchange=true
spring.cloud.stream.rabbit.bindings.input.consumer.exchangeDurable=true
spring.cloud.stream.rabbit.bindings.input.consumer.exchangeType=fanout
spring.cloud.stream.rabbit.bindings.input.consumer.bindQueue=true
spring.cloud.stream.rabbit.bindings.input.consumer.acknowledgeMode=AUTO
spring.cloud.stream.rabbit.bindings.input.consumer.durableSubscription=true

# Integration partner that will receive an sftp data extract
# SFTP Host info and credentials
sftp.integration2.host.fqdn=system1.example.org
sftp.integration2.timeout=0
sftp.integration2.user=extractsvc
sftp.integration2.privateKeyFile=classpath:auth/integration2_sftp_rsa
sftp.integration2.knownHostsFile=classpath:auth/known_hosts
sftp.integration2.privateKeyPassphrase=ENC(..encrypted text removed..)
sftp.integration2.local.temp.directory=/tmp
sftp.integration2.remote.directory=/tmp
sftp.integration2.remote.filename=extract_for_integration2.csv
sftp.integration2.mail.send.on.success=false
sftp.integration2.mail.send.on.failure=false
sftp.integration2.mail.success.to=monitor@example.org
sftp.integration2.mail.success.subject=Dev extract-publisher: notice of success for Integration2
sftp.integration2.mail.failure.to=monitor@example.org
sftp.integration2.mail.failure.subject=Dev extract-publisher: notice of failure for Integration2

# Integration partner that will receive an sftp data extract
# SFTP Host info and credentials
sftp.integration3.host.fqdn=system2.example.org
sftp.integration3.timeout=0
sftp.integration3.user=extractsvc
sftp.integration3.privateKeyFile=classpath:auth/integration2_sftp_rsa
sftp.integration3.knownHostsFile=classpath:auth/known_hosts
sftp.integration3.privateKeyPassphrase=ENC(..encrypted text removed..)
sftp.integration3.local.temp.directory=/tmp
sftp.integration3.remote.directory=/tmp
sftp.integration3.remote.filename=extract_for_integration3.csv
sftp.integration3.mail.send.on.success=false
sftp.integration3.mail.send.on.failure=false
sftp.integration3.mail.success.to=monitor@example.org
sftp.integration3.mail.success.subject=Dev extract-publisher: notice of success for Integration3
sftp.integration3.mail.failure.to=monitor@example.org
sftp.integration3.mail.failure.subject=Dev extract-publisher: notice of failure for Integration3

# Integration partner that will receive an sftp data extract
# SFTP Host info and credentials
sftp.integration1.host.fqdn=system3.example.org
sftp.integration1.timeout=0
sftp.integration1.user=extractsvc
sftp.integration1.privateKeyFile=classpath:auth/integration2_sftp_rsa
sftp.integration1.knownHostsFile=classpath:auth/known_hosts
sftp.integration1.privateKeyPassphrase=ENC(..encrypted text removed..)
sftp.integration1.local.temp.directory=/tmp
sftp.integration1.remote.directory=/tmp
sftp.integration1.remote.filename=extract_for_integration1.csv
sftp.integration1.mail.send.on.success=false
sftp.integration1.mail.send.on.failure=false
sftp.integration1.mail.success.to=monitor@example.org
sftp.integration1.mail.success.subject=Dev extract-publisher: notice of success for Integration1
sftp.integration1.mail.failure.to=monitor@example.org
sftp.integration1.mail.failure.subject=Dev extract-publisher: notice of failure for Integration1
